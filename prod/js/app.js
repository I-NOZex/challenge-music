"use strict";!function(){if("function"==typeof NodeList.prototype.forEach)return!1;NodeList.prototype.forEach=Array.prototype.forEach}();var api=new Vue({http:{root:"https://beat2revolution-api.herokuapp.com/api"}}),apiResources={users:"users",favorites:"users/:userId/musics",musics:"musics",musicDetails:"musics/:musicId"},User=new function(){return this.id=null,this.username=null,this.email=null,this.gravatar=null,this.isLogged=!1,this};User.login=function(t){var e=this;return new Promise(function(i,s){t||s("Enter an email address"),api.$http.get(apiResources.users).then(function(n){var o=n.body.find(function(e){return e.email===t});if(o){e.isLogged=!0,Object.keys(o).forEach(function(t){e[t]=o[t]});var r=MD5(o.email);e.gravatar="https://www.gravatar.com/avatar/"+r,i(e)}else s("No user matching provided email")},function(t){s("Request error: "+t.statusText)})})},User.logout=function(){if(!0!==User.isLogged)return!1;User.id=null,User.username=null,User.email=null,User.gravatar=null,User.isLogged=!1},User.getFavourites=function(){var t=this;return new Promise(function(e,i){!0!==User.isLogged&&i("Please login before"),api.$http.get(apiResources.favorites.replace(":userId",t.id)).then(function(t){e(t.body)},function(t){i("Request error: "+t.statusText)})})},User.isFavorite=function(t){var e=this;return new Promise(function(i,s){!0===e.isLogged?(""+e.musicId).length<1?s("Invalid music ID"):api.$http.get(apiResources.favorites.replace(":userId",e.id)).then(function(e){if(e.body){var n=e.body.find(function(e){return e.id===t});i(!!n)}else s("No favorites")},function(t){s("Request error: "+t.statusText)}):s("Please login before")})},User.addFavourite=function(t){var e=this;return new Promise(function(i,s){!0!==User.isLogged&&s("Please login before"),(""+User.musicId).length<1&&s("Invalid music ID"),api.$http.post(apiResources.favorites.replace(":userId",e.id),{musicid:t}).then(function(t){i(t.body)},function(t){s("Request error: "+t.statusText)})})},User.removeFavourite=function(t){var e=this;return new Promise(function(i,s){!0!==User.isLogged&&s("Please login before"),(""+User.musicId).length<1&&s("Invalid music ID"),api.$http.delete(apiResources.favorites.replace(":userId",e.id)+"/"+t).then(function(t){i(t.body)},function(t){s("Request error: "+t.statusText)})})},Vue.component("login-input",{template:"#tpl-login-input",data:function(){return{email:""}},methods:{login:function(t){this.$parent.User.login(t).then(function(t){app.$refs.curComponent.fetchFavs(!0)},function(t){app.showToast(t,"error")})}}}),Vue.component("login-link",{template:"#tpl-login-link",methods:{switchToInput:function(){this.$parent.switchToInput()}}}),Vue.component("toast-alert",{template:"#tpl-toast-alert",props:["toast"],methods:{switchToInput:function(){this.$parent.switchToInput()}}});var playerData={player:{engine:new Audio,isPlaying:!1,elapsedTime:"00:00",elapsedPercent:0},file:{src:"https://s3.amazonaws.com/pb_previews/205_clap-tap/205_full_clap-tap_0102.mp3",duration:"102",musicArtist:"Brightside Studio",musicName:"Clap Tap",musicCover:"http://hw-img.datpiff.com/mb799428/Deion_Music_Birth-front.jpg"}};Vue.component("media-player",{template:"#tpl-media-player",data:function(){return playerData},created:function(){this.addListeners()},mounted:function(){fixContentHeight()},methods:{addListeners:function(){this.player.engine.addEventListener("timeupdate",this.timeUpdated,!1)},play:function(){this.player.isPlaying?(this.player.engine.pause(),this.player.isPlaying=!1):(this.player.engine.src=this.file.src,this.player.engine.play(),this.player.isPlaying=!0)},marqueeAnimate:function(t){var e=t.target,i=e.classList;i.contains("animate")||(i.add("animate"),e.parentNode.classList.add("animate"),window.addEventListener(animationEndEvent(),function(){i.remove("animate"),e.parentNode.classList.remove("animate")}))},timeUpdated:function(){var t=Math.round(this.player.engine.currentTime),e=Math.floor(t/60<<0),i=Math.floor(t%60);this.player.elapsedTime=(e<10?"0"+e:e)+":"+(i<10?"0"+i:i),this.player.elapsedPercent=100*t/this.file.duration+"%"}},computed:{totalTime:function(){var t=this.file.duration,e=Math.floor(t/60<<0),i=Math.floor(t%60);return(e<10?"0"+e:e)+":"+(i<10?"0"+i:i)}}});var HomeComponent={template:"#tpl-tracklist",data:function(){return{tracks:null,favorites:null,fvs:[]}},created:function(){this.$parent.User.isLogged&&this.fetchFavs(!0),this.fetchData()},methods:{fetchData:function(){var t=this;api.$http.get(apiResources.musics).then(function(e){console.log("tracks loaded"),t.tracks=e.body},function(t){app.showToast("Error: Can't get musics list","error")})},fetchFavs:function(t){var e=this;e.$parent.User.getFavourites().then(function(i){console.log("favs loaded"),i&&(e.favorites=i,t&&(e.fvs=[],e.favorites.forEach(function(t){e.fvs.push(t.id)})))})},addToFavs:function(t){this.$parent.User.addFavourite(t).then(function(t){app.showToast(t.message,"success")},function(t){app.showToast("Error: A problem has occurred while adding to favorites","error")}),this.fvs.push(t),this.fetchFavs()},removeFromFavs:function(t){this.$parent.User.removeFavourite(t).then(function(t){app.showToast(t.message,"success")},function(t){app.showToast("Error: A problem has occurred while removing from favorites","error")}),this.fvs.splice(this.fvs.indexOf(t),1),this.fetchFavs()},isFavorite:function(t){var e=this;return e.favorites?e.favorites.find(function(e){if(e.id==t)return!0}):e.fetchFavs(!0)}},computed:{isUserLogged:function(){return this.$parent.User.isLogged}}},FavoritesComponent={template:"#tpl-tracklist",data:function(){return{tracks:null,fvs:[]}},created:function(){this.fetchData(!0)},methods:{fetchData:function(t){var e=this;e.$parent.User.getFavourites().then(function(i){i&&(e.tracks=i,t&&(e.fvs=[],e.tracks.forEach(function(t){e.fvs.push(t.id)})))},function(t){app.showToast("Error: Can't get favorits list","error")})},addToFavs:function(t){this.$parent.User.addFavourite(t).then(function(t){app.showToast(t.message,"success")},function(t){app.showToast(t,"error")}),this.fvs.push(t),this.fetchData()},removeFromFavs:function(t){this.$parent.User.removeFavourite(t).then(function(t){app.showToast(t.message,"success")},function(t){app.showToast("Error: A problem has occurred while removing from favorites","error")}),this.fvs.splice(this.fvs.indexOf(t),1),this.fetchData()},isFavorite:function(t){return!0}},computed:{isUserLogged:function(){return this.$parent.User.isLogged}}},TrackDetailsComponent={template:"#tpl-track-details",data:function(){return{trackdetails:{track:null,artist:null,album:null}}},created:function(){this.fetchData()},methods:{fetchData:function(){var t=this;api.$http.get(apiResources.musicDetails.replace(":musicId",t.$route.params.musicId)).then(function(e){t.trackdetails=e.body[0]},function(t){app.showToast("Error: Some error occurred while fetching music details","error")})}}},routes=[{path:"/",component:HomeComponent,name:"home",meta:{title:"Home"}},{path:"/users/:userId/musics",component:FavoritesComponent,name:"favorites",meta:{title:"Favorites"}},{path:"/musics/:musicId",component:TrackDetailsComponent,name:"music",meta:{title:"Music Detail"}}],router=new VueRouter({linkActiveClass:"active",routes:routes});router.beforeEach(function(t,e,i){User.isLogged||"favorites"!==t.name?(document.title="Beat2Revolution | "+t.meta.title,i()):i({path:"/",replace:!0})});var app=new Vue({router:router,data:{User:User,current:"login-link",toast:{msg:null,type:null},isToastActive:!1,isSideBarCollapsed:!0},methods:{switchToLink:function(){this.current="login-link"},switchToInput:function(){this.current="login-input"},showToast:function(t,e){var i=this;i.toast.msg=t,i.toast.type=e,i.isToastActive=!0,setTimeout(function(){i.isToastActive=!1},3500)},toggleCollapse:function(){this.isSideBarCollapsed=!this.isSideBarCollapsed}},components:["login-link","login-input","toast-alert","media-player"]}).$mount("#app");
//# sourceMappingURL=data:application/json;charset=utf8;base64,
